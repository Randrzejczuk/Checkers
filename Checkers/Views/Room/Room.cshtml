@model Checkers.Models.Room

@{
    ViewData["Title"] = "Room";
}
<h1 class="text-center text-primary">@Model.Name</h1>
<div class="spacer"></div>
<div class="divisable">
    <div class="left-700px">
        <table class="checkerboard">
            @for (int y = (ViewBag.currentUserId == Model.User2Id ? 8 : 1); y != (ViewBag.currentUserId == Model.User2Id ? 0 : 9); y = (ViewBag.currentUserId == Model.User2Id ? y - 1 : y + 1))
            {
                <tr>
                    @for (int x = (ViewBag.currentUserId == Model.User2Id ? 8 : 1); x != (ViewBag.currentUserId == Model.User2Id ? 0 : 9); x = (ViewBag.currentUserId == Model.User2Id ? x - 1 : x + 1))
                    {
                        Field field = Model.Board.GetField(x, y);
                        switch (field.State)
                        {
                            case State.Unused:
                                <td>
                                    <form asp-action="Room" asp-route-roomId="@Model.Id"
                                          data-ajax-success="resetSelection" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-black"></button>
                                    </form>
                                </td>
                                break;
                            case State.Black:
                                <td>
                                    <form asp-action="Room" asp-route-roomId="@Model.Id"
                                          data-ajax-success="showAvailable(@x,@y,@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-white" name="b" id=@(x.ToString() + y.ToString())>
                                            <img src="~/images/Black.png" class="checker" />
                                        </button>
                                    </form>
                                </td>
                                break;
                            case State.White:
                                <td>
                                    <form asp-action="Room" asp-route-roomId="@Model.Id"
                                          data-ajax-success="showAvailable(@x,@y,@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-white" name="w" id=@(x.ToString() + y.ToString())>
                                            <img src="~/images/White.png" class="checker" />
                                        </button>
                                    </form>
                                </td>
                                break;
                            case State.Black_Q:
                                <td>
                                    <form asp-action="Room" asp-route-roomId="@Model.Id"
                                          data-ajax-success="showAvailable(@x,@y,@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-white" name="B" id=@(x.ToString() + y.ToString())>
                                            <img src="~/images/Black Q.png" class="checker" />
                                        </button>
                                    </form>
                                </td>
                                break;
                            case State.White_Q:
                                <td>
                                    <form asp-action="Room" asp-route-roomId="@Model.Id"
                                          data-ajax-success="showAvailable(@x,@y,@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-white" name="W" id=@(x.ToString() + y.ToString())>
                                            <img src="~/images/White Q.png" class="checker" />
                                        </button>
                                    </form>
                                </td>
                                break;
                            case State.Empty:
                                <td>
                                    <form data-ajax-success="showAvailable(@x,@y,@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                                        <button class="tile-white" name="e" id=@(x.ToString() + y.ToString())>
                                        </button>
                                    </form>
                                </td>
                                break;
                        }
                    }
                </tr>
            }
        </table>
    </div>
    <div class="right60-40">
        <table class="table playerTable">
            <tr class="table-info">
                <td class="playerTableTop">
                    <img src="~/images/White.png" class="checker-mini" />
                    @(Model.User1 != null ? Model.User1.ShortName() : Html.DisplayNameFor(model => model.User1))
                </td>
                <td class="playerTableTop">
                    <img src="~/images/Black.png" class="checker-mini" />
                    @(Model.User2 != null ? Model.User2.ShortName() : Html.DisplayNameFor(model => model.User2))
                </td>
            </tr>
            <tr>
                <td class="playerTableBottom" id="noPadding">
                    <form data-ajax-success="surrenderButtonPressed(@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST"
                          asp-action="JoinButton" asp-route-roomId="@Model.Id" asp-route-buttonId="1" class="playerTableButton">
                        <button type="submit" class="playerTableButton table-hover" @{ if (ViewBag.currentUserId == null || (Model.User1Id != ViewBag.currentUserId && Model.User1Id != null)) { @: disabled="disabled"
                                }}>
                            @(Model.User1 == null ? "Join" : (Model.User1.Id == ViewBag.currentUserId ? "Leave" : "Occupied"))
                        </button>
                    </form>
                </td>
                <td class="playerTableBottom" id="noPadding">
                    <form data-ajax-success="surrenderButtonPressed(@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST"
                          asp-action="JoinButton" asp-route-roomId="@Model.Id" asp-route-buttonId="2" class="playerTableButton">
                        <button type="submit" class="playerTableButton table-hover" @{ if (ViewBag.currentUserId == null || (Model.User2Id != ViewBag.currentUserId && Model.User2Id != null)) { @: disabled="disabled"
                                }}>
                            @(Model.User2 == null ? "Join" : (Model.User2.Id == ViewBag.currentUserId ? "Leave" : "Occupied"))
                        </button>
                    </form>
                </td>
            </tr>
            <tr>
                <td id="no-Border" name="p1Time" value="@Model.User1Time">
                    @Model.User1Time
                </td>
                <td id="no-Border" name="p2Time" value="@Model.User1Time">
                    @Model.User2Time
                </td>
            </tr>
        </table>
        <div class="spacer">
            @{ if (ViewBag.currentUserId != null && (ViewBag.currentUserId == Model.User1Id || ViewBag.currentUserId == Model.User2Id))
                { @:
                    <form data-ajax-success="surrenderButtonPressed(@Model.Id,'@ViewBag.currentUserId')" data-ajax="true" data-ajax-method="POST">
                        <div class="form-group menuItem" id="Surr" @{ if (!Model.IsActive) { @: hidden="hidden"
                             }}>
                            <input type="submit" value="Surrender" class="btn btn-info" />
                        </div>
                    </form>
                    <form data-ajax-success="startButtonPressed(@Model.Id)" data-ajax="true" data-ajax-method="POST"
                          asp-action="StartButton" asp-route-roomId="@Model.Id">
                        <div class="form-group menuItem" id="Start" @{ if (Model.IsActive || Model.User1Id == null || Model.User2Id == null) { @: hidden="hidden"
                             }}>
                            <input type="submit" value="Start" class="btn btn-info" />
                        </div>
                    </form>
                    <form data-ajax-success="startButtonPressed(@Model.Id)" data-ajax="true" data-ajax-method="POST"
                          asp-action="PlayWithBot" asp-route-roomId="@Model.Id">
                        <div class="form-group menuItem" id="Start" @{ if (Model.IsActive || (Model.User1Id != null && Model.User2Id != null)) { @: hidden="hidden"
                             }}>
                            <input type="submit" value="Play with bot" class="btn btn-info" />
                        </div>
                    </form>
                }
            }
        </div>
        <div class="jumbotron bg-light">
            <div class="row">
                <div class="col-md-12 chat-small" id="chat">
                    @if (Model != null)
                    {
                        @for (int i = 0; i < 15; i++)
                        {
                            <div class="msg" id="@i">@(i<Model.Messages.Count() ? Model.Messages.ElementAt(i).MessageToDisplay():"")</div>
                        }
                    }
                </div>

            </div>
        </div>
        <div class="col-md-12">
            <form asp-action="AddMessage" asp-route-roomId="@Model.Id" asp-route-userId="@ViewBag.currentUserId"
                  data-ajax-begin="clearInputField" data-ajax-complete=""
                  data-ajax-success="sendMessage('@ViewBag.currentUserId',@Model.Id)"
                  data-ajax="true" data-ajax-method="POST">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input name="Text" class="form-control" id="messageText" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Send" id="submitButton" class="btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>



@section scripts {
    <script src="~/signalr/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery-unobtrusive-ajax.min.js"></script>
    <script src="~/js/checkers.js"></script>
    <script src="~/js/chat.js"></script>
    <script src="~/js/signalrReqHandlerRoom.js"></script>

    <script>
    connection.start()
    .then(function () {
    connection.invoke('joinRoom', '@Model.Id');
    })
    .catch(error => {
    console.error(error.message);
    });
    </script>
}
